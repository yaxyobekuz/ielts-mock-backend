services:
  # Application service
  app:
    build: .
    ports:
      - "${PORT:-4000}:4000"
    environment:
      - NODE_ENV=production
      - PORT=4000
      - MONGO_URI=${MONGO_URL}
    env_file:
      - .env
    depends_on:
      - mongo
      - redis
    volumes:
      - ./uploads:/app/uploads
    restart: unless-stopped
    networks:
      - ielts-network

  # MongoDB service
  mongo:
    image: mongo:6.0
    container_name: ielts-mongo
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_DB_NAME}
    volumes:
      - ielts_mongo_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d:ro
    restart: unless-stopped
    networks:
      - ielts-network

  # Redis service (for caching and session management)
  redis:
    image: redis:7-alpine
    container_name: ielts-redis
    ports:
      - "6379:6379"
    volumes:
      - ielts_redis_data:/data
    restart: unless-stopped
    networks:
      - ielts-network

  # Nginx reverse proxy service
  nginx:
    image: nginx:alpine
    container_name: ielts-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - ielts-network

volumes:
  ielts_mongo_data:
  ielts_redis_data:

networks:
  ielts-network:
    driver: bridge
